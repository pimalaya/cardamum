################################################################
# Documented configuration sample                              #
################################################################

[accounts.example]

# When the `--account` argument is missing, use this account as the
# default one.
#
default = true

################################################################
# CardDAV section                                              #
################################################################
#
# Configuration of addressbooks relying on the CardDAV protocol, as
# defined in [RFC6352].
#
# [RFC6352]: https://datatracker.ietf.org/doc/html/rfc6352

# There is 3 ways to find a CardDAV addressbook home URI:
#
# 1. By using HTTP discovery, as defined in the Well Known (RFC8615)
# 2. By using the root CardDAV server URI
# 3. By using directy the CardDAV addressbook home set URI
#
# The first method is the slowest because it requires a couple of HTTP
# requests to get the addressbook home URI, but it the safest because
# the URI should never change.
#
# The third method is the fastest because it requires only one single
# HTTP request, but it is the least safe because URI can change
# anytime.
#
# The second method can be a good compromise between speed and safety.

# To discover the CardDAV addressbook home URI, only the host name is
# required.
#
carddav.discover.host = "example.org" 
#carddav.discover.port = 443
#carddav.discover.scheme = "https"

# The root CardDAV server URI, which should contain all the users'
# addressbooks.
#
carddav.server-uri = "https://carddav.example.org"

# The CardDAV addressbook home URI, which should contain all your
# addressbooks.
#
carddav.home-uri = "https://carddav.example.org/principals"

# The plain authentication method (not safe).
#
#carddav.auth = "plain"

# The Basic access authentication method.
#
carddav.auth.basic.username = "username"
carddav.auth.basic.password.command = ["pass", "show", "example"]
#carddav.auth.basic.password.keyring = "example-basic"
#carddav.auth.basic.password.raw = "password"

# The Bearer token authorization method, mainly for OAuth 2.0 usage.
#
#carddav.auth.bearer.command = ["ortie", "token", "show"]
#carddav.auth.bearer.keyring = "example-bearer" 
#carddav.auth.bearer.raw = "oauth2-token" 

################################################################
# Vdir section                                                 #
################################################################
#
# TODO
